version: '3'

services:
  nojavanclub:
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - "8000:8000"
    volumes: 
      - .:/nojavanclub
      - nojavanclub_static_volume:/nojavanclub/static
      - nojavanclub_files_volume:/nojavanclub/media
    command: sh -c "python manage.py waitdb && 
                    python manage.py collectstatic --noinput && 
                    python manage.py migrate && 
                    python manage.py runserver 0.0.0.0:8000"
                    # gunicorn --bind :8000 nojavan.wsgi:application"
    restart: always
    env_file: 
      .env
    networks:
      - nojavan_network
      - nginx_network
    depends_on:
      # - celery
      # - celery-beat
      - nojavan_postgresql
      - redis



  nojavan_postgresql:
    image: postgres:12
    container_name: nojavan_postgresql
    volumes:
      - nojavan_postgresql:/var/lib/postgresql/data
    restart: always
    env_file: .env
    ports:
      - "5431:5432"
    networks:
      - nojavan_network


  redis:
    container_name: 'redis_container'
    image: "redis:latest"
    command: redis-server
    networks:
      - nojavan_network



  celery:
    build: .
    command: sh -c "celery -A nojavan worker -l info"
    container_name: celery_worker
    env_file: .env
    depends_on:
      - nojavanclub
      - nojavan_postgresql
      - redis
    volumes:
      - .:/nojavanclub
    restart: on-failure
    networks:
      - nojavan_network
  
  celery-beat:
    build:
      context: .
    command: sh -c "celery -A nojavan beat -l info"
    volumes:
      - .:/nojavanclub
    depends_on:
      - nojavanclub
      - nojavan_postgresql
      - redis
    restart: on-failure
    env_file: .env
    networks:
      - nojavan_network
    

volumes:
  nojavan_postgresql:
    external: true
  nojavanclub_static_volume:
    external: true
  nojavanclub_files_volume:
    external: true  
networks:
  nojavan_network:
    external: true
  nginx_network:
    external: true